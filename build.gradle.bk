plugins {
  id 'org.jetbrains.kotlin.jvm' version '2.0.0'
  id 'org.jetbrains.kotlin.plugin.spring' version '2.0.0'
  id 'org.springframework.boot' version '3.3.5'
  id 'io.spring.dependency-management' version '1.1.6'
  id 'org.jetbrains.kotlin.plugin.jpa' version '2.0.0'
  id("org.jetbrains.kotlin.kapt") version "2.0.0"
}

group = 'trile'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations.configureEach {
  exclude module: 'spring-boot-starter-logging'
}

repositories {
  mavenCentral()
}

ext {
  set('springModulithVersion', "1.2.4")
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.modulith:spring-modulith-starter-core'
  implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
  runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
  runtimeOnly 'org.springframework.modulith:spring-modulith-observability'

  implementation "org.springframework.boot:spring-boot-starter-log4j2"
  implementation 'org.apache.logging.log4j:log4j-api-kotlin:1.5.0'

//  implementation 'io.micrometer:micrometer-tracing-bridge-brave'
//  implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'org.jetbrains.kotlin:kotlin-reflect'

  runtimeOnly 'com.mysql:mysql-connector-j'

  runtimeOnly 'org.mapstruct.extensions.spring:mapstruct-spring-annotations:1.1.2'
  kapt("org.mapstruct:mapstruct-processor:1.6.2")

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
  testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
  }
}

kotlin {
  compilerOptions {
    freeCompilerArgs.addAll '-Xjsr305=strict'
  }
}

allOpen {
  annotation 'jakarta.persistence.Entity'
  annotation 'jakarta.persistence.MappedSuperclass'
  annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
  useJUnitPlatform()
}
